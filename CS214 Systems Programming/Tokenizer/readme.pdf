For this project, I created two structures in order to acheive the goal. The first structure was TokenizerT which held all of the token strings, and the second was a binary tree to hold delimiters for searching. For each character I checked it against the tree and if it a delimiter, I did not add it to the token, and if it was not a delimiter I added it to the token. I also created another method for adding hex's to strings.  So for creating the tokens, call argv[1](delimiters) D and argv[2](untokenized string) T so the average and best runtime is T(log(D)) and worst case is T*D. 
